import ext.github as github;
import std.string as string;
import ext.web as web;
import std.array as array;
import ext.mustache as mch;
import ext.MarkDownIt as md;



let project_json_data = github.get_content('/docs/data/project.json');
let project = parse_json(project_json_data);
let articles = project['blogs'];

let {page} = web.query();

let PAGE_COUNT = 20;

if !page {
    page = 0;
}

let HOST_NAME = web.hostname();

let articles_count = len(articles);
let offset = page * PAGE_COUNT;

let end = offset + PAGE_COUNT;

if end > articles_count {
    end = articles_count;
}

articles = array.slice(articles, offset, end);

let tmpCard = mch.init('/docs/article_card.mustache');

let cards = [];

for (let i = 0; i < len(articles); i++) {
  let article = articles[i];

  let md_result = md.render('/docs/blogs/' + article);
  let metas = md.get_metas(md_result);

  let is_player_card = false;
  let is_summary_card = false;
  let is_summary_image_card = false;

  let player_url = null;
  let image_url = null;
  let video = metas['video'];
  let image = metas['image'];
  let title = metas['title'];
  let description = metas['description'];

  if video {
    is_player_card = true;
    is_summary_card = false;
    is_summary_image_card = false;

    let youtubeID = video['youtubeID'];
    image_url = 'https://img.youtube.com/vi/' + youtubeID + '/0.jpg';
  } elsif image {
    is_player_card = false;
    is_summary_card = false;
    is_summary_image_card = true;
    
    image_url = image['src'];
  } else {
    is_player_card = false;
    is_summary_card = true;
    is_summary_image_card = false;
    
  }
  
  let card_html = mch.render(tmpCard);
  array.push(cards, card_html);
}

let articles = array.join(cards, '');

let header = mch.renderTemplate('/docs/header.mustache');
let footer = mch.renderTemplate('/docs/footer.mustache');

let html = mch.renderTemplate('/docs/blogs.mustache');

web.body(html);

